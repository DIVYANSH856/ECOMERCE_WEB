{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBJj5PIGjtpZ8zITM3hCDaUrG0N0JAK_2E\",\n  authDomain: \"crwn-clothing-5f856.firebaseapp.com\",\n  projectId: \"crwn-clothing-5f856\",\n  storageBucket: \"crwn-clothing-5f856.appspot.com\",\n  messagingSenderId: \"601881400311\",\n  appId: \"1:601881400311:web:b55de368a8e1e805b554f2\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log(\"error creating the user\", error.message);\n    }\n  }\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password"],"sources":["/home/divyansh/react/ecomerce/ECOMERCE_WEB/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import {initializeApp} from 'firebase/app' \nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword\n} from  'firebase/auth';\nimport{\n  getFirestore,\n  doc,\n  getDoc,\n  setDoc\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBJj5PIGjtpZ8zITM3hCDaUrG0N0JAK_2E\",\n    authDomain: \"crwn-clothing-5f856.firebaseapp.com\",\n    projectId: \"crwn-clothing-5f856\",\n    storageBucket: \"crwn-clothing-5f856.appspot.com\",\n    messagingSenderId: \"601881400311\",\n    appId: \"1:601881400311:web:b55de368a8e1e805b554f2\"\n  };\n  \n  // Initialize Firebase\n  const app = initializeApp(firebaseConfig);\n  const provider = new GoogleAuthProvider();\n\n  provider.setCustomParameters({\n    prompt:\"select_account\"\n  });\n\n  export const auth = getAuth();\n\n  export const signInWithGooglePopup = () =>signInWithPopup(auth,provider);\n  \n  export const db = getFirestore();\n\n  export const createUserDocumentFromAuth = async(userAuth)=>{\n    const userDocRef = doc(db,'users',userAuth.uid);\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef);\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists());\n    \n    if(!userSnapshot.exists()){\n    const {displayName,email} = userAuth;\n    const createdAt = new Date();\n\n      try {\n        await setDoc(userDocRef,{\n          displayName,email,createdAt\n        })\n      } catch (error) {\n        console.log(\"error creating the user\", error.message);\n      }\n    }\n   \n  }\n\n  export const createAuthUserWithEmailAndPassword=async(email,password)=>{\n\n  }"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,QAMQ,eANR;AAOA,SACEC,YADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,MAJF,QAKO,oBALP;AAOA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,qCAFO;EAGnBC,SAAS,EAAE,qBAHQ;EAInBC,aAAa,EAAE,iCAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB,C,CASE;;AACA,MAAMC,GAAG,GAAGjB,aAAa,CAACU,cAAD,CAAzB;AACA,MAAMQ,QAAQ,GAAG,IAAId,kBAAJ,EAAjB;AAEAc,QAAQ,CAACC,mBAAT,CAA6B;EAC3BC,MAAM,EAAC;AADoB,CAA7B;AAIA,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAApB;AAEP,OAAO,MAAMqB,qBAAqB,GAAG,MAAKnB,eAAe,CAACkB,IAAD,EAAMH,QAAN,CAAlD;AAEP,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;AAEP,OAAO,MAAMkB,0BAA0B,GAAG,MAAMC,QAAN,IAAiB;EACzD,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAD,EAAI,OAAJ,EAAYE,QAAQ,CAACE,GAArB,CAAtB;EACAC,OAAO,CAACC,GAAR,CAAYH,UAAZ;EAEA,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAG,CAACD,YAAY,CAACC,MAAb,EAAJ,EAA0B;IAC1B,MAAM;MAACC,WAAD;MAAaC;IAAb,IAAsBR,QAA5B;IACA,MAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEE,IAAI;MACF,MAAM1B,MAAM,CAACiB,UAAD,EAAY;QACtBM,WADsB;QACVC,KADU;QACJC;MADI,CAAZ,CAAZ;IAGD,CAJD,CAIE,OAAOE,KAAP,EAAc;MACdR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,KAAK,CAACC,OAA7C;IACD;EACF;AAEF,CArBM;AAuBP,OAAO,MAAMC,kCAAkC,GAAC,OAAML,KAAN,EAAYM,QAAZ,KAAuB,CAEtE,CAFM"},"metadata":{},"sourceType":"module"}